<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gICAgICAgICAgICAgICAgICAgICAgICAgf/Z
</value>
  </data>
</root>