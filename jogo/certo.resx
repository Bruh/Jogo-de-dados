<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAf//Z
</value>
  </data>
</root>